{% raw %}---
name: tests

on:
  pull_request:
  schedule:
    - cron: "0 7 * * 1"

jobs:
  extension-tests:
    strategy:
      matrix:
        python: [ 3.8 ]

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4


      # ---- [ Install IM&M ] -----------------------------------------------------------------------------------------
      - name: Install IM&M
        run: |
          ansible-galaxy install https://www.immsuite.com/dist/ansible/imm-server-latest.tar.gz
          echo "$PLAYBOOK" | ansible-playbook -c local -i localhost, /dev/stdin
        env:
          PLAYBOOK: |
            - hosts: localhost
              become: true
              roles:
                - role: imm-server-latest
                  imm_scratch_data: "{{ lookup('env', 'GITHUB_WORKSPACE') }}"  # mount this folder as /scratch
                  imm_mysql_root_password: secret
                  imm_mysql_use_root_account: yes  # the unit tests create a new database, need root access
                  imm_proxy_auto_tls: no  # use a self signed certificate
                  imm_proxy_redirect_to_fqdn: no  # github runners don't have an fqdn


      # ---- [ Build the extension ] ----------------------------------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Build the extension
        run: |
          pip install -r requirements-dev.txt
          make build


      # ---- [ Test the extension ] -----------------------------------------------------------------------------------
      - name: Wait for IM&M to finish booting up
        run: imm-cli wait-for-services

      - name: Install the extension
        run: imm-cli install-extension dist/*.whl

      - name: Run the unit tests inside the running IM&M environment
        run: |
          run-inside-environment pip install --user -r requirements-dev.txt
          run-inside-environment pytest -ra ./tests/
{% endraw %}
